---
subtitle: "Statistical workshop with R"
title: "Statistical workshop with R"
author: Natapol Pornputtapong
institute: '[Chulalongkorn University](#)'
toc: true
toc-depth: 1
toc-title: "What we will cover today:"
center-title-slide: false
from: markdown+emoji
date: 20 October 2023
date-meta: 20 October 2023
date-format: "DD MMM YYYY"
editor: 
  markdown: 
    wrap: 72
format:
  revealjs:
    fig-responsive: true
    theme: simple
    scrollable: true
    echo: true
    slide-number: c/t
    mouse-wheel: false
    preview-links: auto
    logo: /figures/icons/course_favicon.png
    css: /css/styles_slides.css
    footer: 'R Statistical Workshop'
---

# PPDAC: D for Data

## Ethical on Data

::: {.r-fit-text}
“Fabrication 
and 
Falsification"
:::

It is a primary responsibility of a researcher to avoid either a false statement or an omission that distorts the research record. 

A researcher must not report anticipated research results that had not yet been observed at the time of submission of the report.

## Avoid misconduct on data

- Data integrity
- Use and mis-use of data
- Ownership and access of data
- Storage and Retention of Data
- Data privacy

## Data integrity

maintain a **clear and complete record of data** acquired. 
sufficient detail to permit examination for the purpose of replicating the research, responding to questions that may result from unintentional error or misinterpretation, establishing authenticity of the records, and confirming the validity of the conclusions.
destruction of research records or the failure to maintain and produce research records ^[http://www.provost.pitt.edu/documents/GUIDELINES%20FOR%20ETHICAL%20PRACTICES%20IN%20RESEARCH-FINALrevised2-March%202011.pdf
]

## Data integrity: standard practice Data recording

- Record data in ink in an proper notebook
- Proper notebook
  - indexed
  - consecutively numbered pages
  - permanently bound
- Entries should not be erased 
  - use a thin line cross
  - initialed dated correction written separately
  - an explanatory note, near the original entry or in the margin
  
## Data integrity

- All pages of a notebook should be dated and initialed. 
- printouts from instruments or computers, 
  - labeled and pasted into the notebook or, 
  - stored securely and referenced in the notebook as to storage location. 


## example notebook

![](assets/notebook_1.jpg){fig-align="center"}

## Use and Mis-use I

- Negative result data
- Large background
Do not: withholding of information about confounding factors. If some data should be disregarded for a stated reason, confirmed by an approved statistical test for neglecting outliers, the reason should be stated in the published accounts. 

Any intentional or reckless disregard for the truth in reporting observations may be considered to be an act of research misconduct. 

## Use and Mis-use II

The use of photo-images not to misrepresent the underlying data.

**Do not**

- add or delete any part of the image: a band
- differentially adjust the intensity
- label an image from one experiment as representing a different experiment
- splice image without using a line indicating the deletion, or to juxtapose pieces from different image onto a single image.

## Data cleansing

:::: {.columns}

::: {.column width="50%"}

**Dirty data**
- Invalid	
- Inaccurate	
- Incomplete	
- Inconsistent	
- Duplicate entries	
- Incorrectly formatted	

:::

::: {.column width="50%"}

**Clean data**
- Valid
- Accurate
- Complete
- Consistent
- Unique
- Uniform

:::

::::


## Example: Data validation

A date of birth as dd-mm-yyyy,

day field will allow numbers up to 31

month field up to 12

year field up to 2021

## Example: Inaccurate data

Survey question:

How often do you go grocery?

- Every day
- Once a week
- Biweekly
- Once a month
- Less than once a month
- Never

Inaccurate number from instruments

## Example: Incomplete data

Missing data

Handling:
- Prevent
- Listwise or case deletion, Pairwise deletion
- Imputation: Mean substitution, Regression imputation, Maximum likelihood, Expectation-Maximization
- Sensitivity analysis
- Last observation carried forward


## Example: Inconsistent data

In your survey about demographic variables, including age, ethnicity, education level, and socioeconomic status.

One participant enters 
“13” for their age
PhD-level education as their highest attained degree

Or

“14” for their age
Have 2 children

## Example: Duplicate entries

Fills out the questionnaire twice
Record twice or multiple time
Subject duplication

## Example: Nonuniform data

In a survey, ask to enter their gross salary in U.S. dollars.
Some respond with their monthly salary
others report their annual salary
Using difference units

## Ownership and access of data

Research data obtained in studies performed at the University and/or by employees of the University are not the property of the researcher who generated or observed them or even of the principal investigator of the research group. They belong to the University, which can be held accountable for the integrity of the data even if the researchers have left the University.

## Storage and Retention of Data

- Stored securely for at least five years after completion
- Deposited in a national or international databank
  - X-ray crystallographic data on protein structures, 
  - human genomic
  - proteomic data
  - DNA microarray data.

## Data privacy

**By Law**

- National Health Act: 2007
- Personal data protection act: 2019

## Data protection

- anonymization
- access control
- avoid share drive

# PPDAC: A for Analysis

## library installation

- tidyverse
  - tibble
  - tribble
  - readr
  - tidyr
  - dplyr
  - ...
- tidymodels
  - infer
  
```{r}
#| eval: false
install.packages("tidyverse")
install.packages("tidymodels")
```

## calling library

```{r}
#| code-fold: true
#| code-summary: "Show the code"

library(tidyverse)
library(tidymodels)
```

## variable

```{r}

x <- 3
y <- c(3, 4, 5)
```

## General data sciences process

```{dot}

digraph G {
  rankdir="LR"
  compound=true;
  
  node [style=rounded, shape=box];
  subgraph cluster_1 {
    Import -> Tidy -> Transform;
    label = "wrangle";
    color=blue
  }
  
  subgraph cluster_2 {
    { rank=same Explore  Analysis}
    Transform:ne -> Explore:w;
    Explore:e -> Analysis:e;
    Analysis:w -> Transform:se;
    label = "Understand";
    color=blue
  }
  
  Explore -> Communicate [ltail=cluster_2];
  
}
```

## tibbles

```{r}
#| echo: false

knitr::kable(tibble(
    x = 1:5, 
    y = 1, 
    z = x ^ 2 + y
  ),
  "pipe"
)
```

## The NHANES data

| Variable           | Definition                                                                                                                                                                               |
|:--------------------------------|:--------------------------------------|
| id                 | A unique sample identifier                                                                                                                                                               |
| Gender             | Gender (sex) of study participant coded as male or female                                                                                                                                |
| Age                | Age in years at screening of study participant. Note: Subjects 80 years or older were recorded as 80.                                                                                    |
| Race               | Reported race of study participant, including non-Hispanic Asian category: Mexican, Hispanic, White, Black, Asian, or Other. Not availale for 2009-10.                                   |
| Education          | Educational level of study participant Reported for participants aged 20 years or older. One of 8thGrade, 9-11thGrade, HighSchool, SomeCollege, or CollegeGrad.                          |
| MaritalStatus      | Marital status of study participant. Reported for participants aged 20 years or older. One of Married, Widowed, Divorced, Separated, NeverMarried, or LivePartner (living with partner). |
| RelationshipStatus | Simplification of MaritalStatus, coded as Committed if MaritalStatus is Married or LivePartner, and Single otherwise.                                                                    |
| Insured            | Indicates whether the individual is covered by health insurance.                                                                                                                         |
| Income             | Numerical version of HHIncome derived from the middle income in each category                                                                                                            |
| Poverty            | A ratio of family income to poverty guidelines. Smaller numbers indicate more poverty                                                                                                    |
| HomeRooms          | How many rooms are in home of study participant (counting kitchen but not bathroom). 13 rooms = 13 or more rooms.                                                                        |
| HomeOwn            | One of Home, Rent, or Other indicating whether the home of study participant or someone in their family is owned, rented or occupied by some other arrangement.                          |
| Work               | Indicates whether the individual is current working or not.                                                                                                                              |
| Weight             | Weight in kg                                                                                                                                                                             |
| Height             | Standing height in cm. Reported for participants aged 2 years or older.                                                                                                                  |
| BMI                | Body mass index (weight/height2 in kg/m2). Reported for participants aged 2 years or older.                                                                                              |
| Pulse              | 60 second pulse rate                                                                                                                                                                     |
| BPSys              | Combined systolic blood pressure reading, following the procedure outlined for BPXSAR.                                                                                                   |
| BPDia              | Combined diastolic blood pressure reading, following the procedure outlined for BPXDAR.                                                                                                  |
| Testosterone       | Testerone total (ng/dL). Reported for participants aged 6 years or older. Not available for 2009-2010.                                                                                   |
| HDLChol            | Direct HDL cholesterol in mmol/L. Reported for participants aged 6 years or older.                                                                                                       |
| TotChol            | Total HDL cholesterol in mmol/L. Reported for participants aged 6 years or older.                                                                                                        |
| Diabetes           | Study participant told by a doctor or health professional that they have diabetes. Reported for participants aged 1 year or older as Yes or No.                                          |
| DiabetesAge        | Age of study participant when first told they had diabetes. Reported for participants aged 1 year or older.                                                                              |
| nPregnancies       | How many times participant has been pregnant. Reported for female participants aged 20 years or older.                                                                                   |
| nBabies            | How many of participants deliveries resulted in live births. Reported for female participants aged 20 years or older.                                                                    |
| SleepHrsNight      | Self-reported number of hours study participant usually gets at night on weekdays or workdays. Reported for participants aged 16 years and older.                                        |
| PhysActive         | Participant does moderate or vigorous-intensity sports, fitness or recreational activities (Yes or No). Reported for participants 12 years or older.                                     |
| PhysActiveDays     | Number of days in a typical week that participant does moderate or vigorous-intensity activity. Reported for participants 12 years or older.                                             |
| AlcoholDay         | Average number of drinks consumed on days that participant drank alcoholic beverages. Reported for participants aged 18 years or older.                                                  |
| AlcoholYear        | Estimated number of days over the past year that participant drank alcoholic beverages. Reported for participants aged 18 years or older.                                                |
| SmokingStatus      | Smoking status: Current Former or Never.                                                                                                                                                 |

## import data to tibbles

```{r}

nh <- read_csv(file="nhanes.csv")
nh
```

## view tibbles

```{r}
#| eval: false

View(nh)
```

## Inspecting content of tibbles

- head: shows the first few rows
- tail: shows the last few rows

## table head: head

```{r}

nh %>% head
```

## table tail: tail

```{r}

nh %>% tail
```

## Inspecting size of tibbles

- dim: returns a 2-element vector with the number of rows in the
  first element, and the number of columns as the second element
  (the dimensions of the object)
- nrow: returns the number of rows
- ncol: returns the number of columns

## table dimension: dim

```{r}

nh %>% dim
```

## Summarize tibbles

- names: returns the column names
- str: structure of the object and information about the class,
  length and content of each column
- summary: works differently depending on what kind of object
  you pass to it. Passing a data frame to the summary() function
  prints out useful summary statistics about numeric column (min,
  max, median, mean, etc.)

## list column name: names

```{r}

nh %>% colnames
```

## data structure: str

```{r}

nh %>% str
```

## data summary: summary

```{r}

nh %>% summary
```

## Accessing variables & subsetting data frames

access individual variables within a dataframe using the \$
operator

```
tibblesName\$specificVariable
```

or by bracket orperator

```
tibblesName[]
```

## Select by column name

list variable names

```{r}

nh %>% names
```

Showing value in Weight variable

```{r}

nh$Weight
```

## Select Rows by index range

syntax

```
tibblesName[row, column]
```

select data from row number 3 till number 6

```{r}

nh[3:6,]
```

## Select Rows by column value

```{r}

nh[nh$Gender == 'male',]
```

## Select Rows by checking values on multiple columns

```{r}

nh[nh$Gender == 'male' & nh$Weight > 50,]
```

## Select Rows by list of column values

```{r}

nh[nh$Race %in% c('Mexican', 'Hispanic', 'White'),]
```

## Tidy data

![](assets/tidy-1.png){fig-align="center"}

## Tidy data: Wide form data

```{r}
wide <- tribble(
  ~name,             ~weight,  ~height,
  #-----------------|--------|---------
  "Phillip Woods",         75,     186,
  "Harison Ford",          80,     185,
  "Jessica Cordero",       47,     156
)
wide
```

## Malform data: Long form data

```{r}

long <- tribble(
  ~name,             ~varname,  ~values,
  #-----------------|--------|------
  "Phillip Woods",   "weight",    75,
  "Phillip Woods",   "height",   186,
  "Harison Ford",    "weight",    80,
  "Harison Ford",    "height",   185,
  "Jessica Cordero", "weight",    47,
  "Jessica Cordero", "height",   156
)
long
```


## Long to wide form pivoting

:::: {.columns}

::: {.column width="50%"}

```{r}

long %>% 
  pivot_wider(
    names_from = varname, 
    values_from = values
  )
```

:::

::: {.column width="50%"}

```{r}

wide
```

:::

::::

## Long to wide form pivoting

:::: {.columns}

::: {.column width="50%"}

```{r}

wide %>% 
  pivot_longer(
    c("weight", "height"), 
    names_to = "varname", 
    values_to = "values"
  )
```

:::

::: {.column width="50%"}

```{r}

long
```

:::

::::

## unite/separate variable

```{r}
data <- tribble(
  ~country,     ~century, ~year,  ~rate,
  #------------|--------|------|----------
  "Afghanistan", "19",      "99",    "745/19987071",
  "Afghanistan", "20",      "00",    "2666/20595360",
  "Brazil",      "19",      "99",    "37737/172006362",
  "Brazil",      "20",      "00",    "80488/174504898",
  "China",       "19",      "99",    "212258/1272915272",
  "China",       "20",      "00",    "213766/1280428583"
)
data
```

## separate data

```{r}
data %>% separate(
  rate, 
  into = c("cases", "population"),
  convert = TRUE,
  sep = "/"
)
```

## unite data

```{r}
data %>% unite(
  new, 
  century, 
  year, 
  sep = ""
)
```


# data transform

## dplyr package

-   filter()
-   select()
-   mutate()
-   arrange()
-   summarize()
-   group_by()
-   glimpse()

## filter()

If you want to filter rows of the data where some condition is true, use
the filter() function.

2.  The argument is a condition you must satisfy, e.g.
    filter(symbol == "LEU1"). If you want to satisfy all of
    multiple conditions, you can use the "and" operator, &. The "or"
    operator \| (the pipe character, usually shift-backslash) will
    return a subset that meet any of the conditions.

- $==$: Equal to
- $!=$: Not equal to
- $>$, $>=$: Greater than, greater than or equal to
- $<$, $<=$: Less than, less than or equal to

## Logical operators

![](assets/transform-logical.png){fig-align="center"}

## filter: example

```{r}

nh %>% filter(Gender=="male" & Weight>=50)
```

## select

Select specific column

## select: select column

```{r}

nh %>% select(Gender, Weight)
```

## select: exclude column

```{r}

nh %>% select(-Gender, -Weight)
```

## mutate

add new column

```{r}

nh %>% mutate(BMI_2=Weight/(Height*100)^2)
```

## arrange

sort by column

## arrange by BMI ascending

```{r}

nh %>% arrange(BMI)
```

## arrange by BMI descending

```{r}

nh %>% arrange(desc(BMI))
```

## group_by

group by data in column(s)

```{r}

nh %>% 
  group_by(Gender, Race) %>% 
  ungroup
```

## summarize: function

Useful functions

- Center: mean(), median()
- Spread: sd(), IQR(), mad()
- Range: min(), max(),
- Position: first(), last(), nth(),
- Count: n(), n_distinct()
- Logical: any(), all()

## summarize

```{r}

nh %>% 
  group_by(Gender, Race) %>% 
  summarize(meanBMI = mean(BMI)) %>% 
  ungroup
```



## Glimpse

Returns a glimpse of your data

```{r}

nh %>% glimpse
```

# Descriptive statistics

## Display all Race values

```{r}

nh$Race
```

## Get the unique values of Race

```{r}
nh$Race %>% unique
nh$Race %>% unique %>% length
```

## Age mean, median, range

```{r}
nh$Age %>% mean
nh$Age %>% median
nh$Age %>% range
```

# Missing data

## Missing values

in one of two possible ways:

- Explicitly, i.e. flagged with NA.
- Implicitly, i.e. simply not present in the data.

```{r}
stocks <- tibble(
  year   = c(2015, 2015, 2015, 2015, 2016, 2016, 2016),
  qtr    = c(   1,    2,    3,    4,    2,    3,    4),
  return = c(1.88, 0.59, 0.35,   NA, 0.92, 0.17, 2.66)
)
```

## Implicit missing values

```{r}
stocks %>% 
  pivot_wider(names_from = year, values_from = return)
```

## complete record

```{r}
stocks %>% 
  complete(year, qtr)
```

## detect missing data

```{r}

stocks %>% 
  complete(year, qtr) %>% 
  map(is.na)
```

## count missing data by column

```{r}

stocks %>% 
  complete(year, qtr) %>% 
  map(is.na) %>% 
  map(sum)
```


## avoid missing data

:::: {.columns}

::: {.column width="50%"}

```{r}


nh$Income %>% mean
```

:::

::: {.column width="50%"}

```{r}


nh$Income %>% mean(na.rm=TRUE)
```

:::

::::

## missing treatment: remove data

```{r}
stocks %>% 
  complete(year, qtr) %>% 
  fill(year, qtr)
```

## missing treatment: last observation carried forward

```{r}
stocks %>% 
  complete(year, qtr) %>% 
  fill(return)
```


## missing treatment: replace by mean

```{r}
stocks %>% 
  complete(year, qtr) %>%
  mutate(
    return = replace(
      return,
      is.na(return),
      mean(return, na.rm = TRUE)
    )
  )
```

## missing treatment: replace by median

```{r}
stocks %>% 
  complete(year, qtr) %>%
  mutate(
    return = replace(
      return,
      is.na(return),
      median(return, na.rm = TRUE)
    )
  )
```


# exploratory data analysis (EDA)

## Histogram

```{r}

nh %>% 
  ggplot(aes(BMI)) + 
  geom_histogram(bins=30)
```

## Histogram with calculation

```{r}

# In pounds, more bins

nh %>% 
  ggplot(aes(Weight*2.2)) + 
  geom_histogram(bins=80)
```

## Scatter plots

```{r}

nh %>% 
  ggplot(aes(Height, Weight, col=Gender)) + 
  geom_point()
```

## Complex scatter plots

```{r}

nh %>% 
  filter(Age>=18) %>% 
  ggplot(aes(Height, Weight, col=Gender)) + 
    geom_point() + 
    geom_smooth(method="lm")
```

# Statistical testing

## normality test: Shapiro-Wilk test of normality

$$ H_0 : data distribution = normal distribution $$
$$ H_1 : data distribution \neq normal distribution $$

```{r}

nh %>% 
  filter(Diabetes=="Yes") %>% 
  .$BMI  %>% 
  shapiro.test
```

## Bartlett Test of Homogeneity of Variances

$$ H_0 : Var_{diabetes} = Var_{nondiabetes} $$
$$ H_1 : Var_{diabetes} \neq Var_{nondiabetes} $$

```{r}

nh %>% 
  filter(Age>=18) %>% 
  bartlett.test(BMI~Diabetes, data=.)
```

## one sample T Test

$$ H_0 : \mu_{BMI_{diabetic}} = 25 $$ 
$$ H_1 : \mu_{BMI_{diabetic}} \neq 25 $$

```{r}

nh %>% 
  filter(Age>=18) %>% 
  t_test(response = BMI, mu = 25)
```

## one sample T Test: inferiority test

$$ H_0 : \mu_{BMI_{diabetic}} \geq 25 $$ 
$$ H_1 : \mu_{BMI_{diabetic}} < 25 $$

```{r}


nh %>% 
  filter(Age>=18) %>% 
  t_test(response = BMI, mu = 25, alternative = "less")
```

## one sample T Test: superiority test

$$ H_0 : \mu_{BMI_{diabetic}} \leq 25 $$ 
$$ H_1 : \mu_{BMI_{diabetic}} > 25 $$

```{r}

nh %>% 
  filter(Age>=18) %>% 
  t_test(response = BMI, mu = 25, alternative = "greater")
```

## two sample T Test: equal variance, two-tail

$$ H_0 : \mu_{BMI_{diabetic}} = \mu_{BMI_{nondiabetic}} $$
$$ H_1 : \mu_{BMI_{diabetic}} \neq \mu_{BMI_{nondiabetic}} $$

```{r}

nh %>% 
  filter(Age>=18) %>% 
  t_test(formula = BMI~Diabetes, , var.equal=TRUE)
```

## two sample T Test: not equal variance, two-tail

$$ H_0 : \mu_{BMI_{diabetic}} = \mu_{BMI_{nondiabetic}} $$
$$ H_1 : \mu_{BMI_{diabetic}} \neq \mu_{BMI_{nondiabetic}} $$

```{r}


nh %>% 
  filter(Age>=18) %>% 
  t_test(formula = BMI~Diabetes, , var.equal=FALSE)
```

## two sample T Test: not equal variance, one-tail

$$ H_0 : \mu_{BMI_{diabetic}} \leq \mu_{BMI_{nondiabetic}} $$
$$ H_1 : \mu_{BMI_{diabetic}} > \mu_{BMI_{nondiabetic}} $$

```{r}

nh %>% 
  filter(Age>=18) %>% 
  t_test(
    formula = BMI~Diabetes, 
    alternative="greater", 
    order = c("Yes", "No"),
    var.equal=FALSE
  )
```

## Wilcoxon rank-sum test (a.k.a. Mann-Whitney U test)

```{r}

nh %>% 
  filter(Age>=18) %>% 
  wilcox.test(BMI~Diabetes, data=.)
```

# ANOVA

## comparing BMI among Race

```{r}
nh$Race %>% unique
```

## preparing data

```{r}
nhaov <- nh %>% 
  filter(Race!="Other" & !is.na(Diabetes) & !is.na(BMI)) %>% 
  mutate(
    Race = factor(
      Race, 
      labels = c("Asian", "Black", "White", "Mexican", "Hispanic")
    ),
    Diabetes = factor(
      Diabetes, 
      labels = c("Yes", "No")
    )
  )
nhaov
```

## box plot

```{r}
nhaov  %>% ggplot(data = ., # add the data
       aes(x = Race, y = BMI, # set x, y coordinates
           color = Race)) +    # color by treatment
  geom_boxplot() +
  facet_grid(~Diabetes) # create panes base on health status
```

## summarize by group

```{r}
nhaov %>%   
  group_by(Race, Diabetes) %>%  
  summarize(mean = mean(BMI)) %>%
  ungroup()
```

## Analysis of Varience

$$ H_0 : \mu_{BMI_{Asian}} = \mu_{BMI_{Black}} = \mu_{BMI_{White}} = \mu_{BMI_{Mexican}} = \mu_{BMI_{Hispanic}} $$

```{r}

nhaov %>% 
  aov(BMI~Race, data=. ) %>%
  summary
```

## Post-hoc

```{r}

nhaov %>% 
  aov(BMI~Race, data=. ) %>%
  TukeyHSD(which="Race")
```

## tidy Post-hoc

```{r}

nhaov %>% 
  aov(BMI~Race, data=. ) %>%
  TukeyHSD(which="Race") %>%
  tidy
```

# simple linear regression

## Model

$$ BMI = \beta_0 + \beta_1 Age $$
![](assets/036.png){fig-align="center"}

## Assumptions

- Non-linearity
- Heteroscedasticity
- Outlier values
- Normality of residuals

## Non-linearity

![](assets/037.png){fig-align="center"}

## Heteroscedasticity

![](assets/038.png){fig-align="center"}

## Normality of residuals

![](assets/039.png){fig-align="center"}
![](assets/040.png){fig-align="center"}

## plot

```{r}
nh %>%
  ggplot(aes(BMI, Age)) + 
  geom_point() + 
  geom_smooth(method = "lm", se = FALSE)
```

## Fitting

```{r}

nh %>% 
  lm(BMI~Age , data=.) %>% 
  summary
```

## Model Diagnostics

```{r}

par(mfrow = c(2, 2))

nh %>% lm(BMI~Age , data=.) %>% plot

```

## References

-   https://sparkbyexamples.com/r-programming/select-rows-in-r/
-   https://4va.github.io/biodatasci/
-   https://bioconnector.github.io/
